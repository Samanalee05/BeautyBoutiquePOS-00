<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        B8TmGUIOwmwrAAAAAElFTkSuQmCC
</value>
  </data>
</root>