<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox11.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>