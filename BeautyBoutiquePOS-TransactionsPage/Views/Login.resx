<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        N0BDgPaaAQDqqUlL3QANAdpLBgCopyYteQM0BOhkGQCgnpq09A3QEKATZQCAemrSGjZAQ4COlwEA6qlJ
        a9kADQEaZQCAemrSmjZAQ4COzgAA9dSktW2AhgBdNQMA1FOT1rgBGgL0+QwAUE9NWusGaAjQlAEA6qlJ
        a94ADQEyAEA9NWntG6AhYN0ZAKCemmQDNASsOesf6qlJNsArGALWmfUP9dQkG+CVDAHry/qHemqSDfDq
        DAHryvqHemqSDfBYhoD1ZP1DPTXJBjhmCFhH1j/UU5NsgMdnCFh+1j/UU5NsgCdmCFh21j/UU5NsgCdn
        CFhu1j/UU5NsgHtjCFhm1j/UU5NsgHtnCFhe1j/UU5NsgPtjCFhW1j/UU5NsgPtnCFhO1j/UU5NsgAdj
        CFhG1j/UU5NsgAdnCOif9Q/11CQb4OEYAnpn/UM9NckGeHiGgL5Z/1BPTbIB1jAE9Mz6h3pqkg2wjiGg
        X9Y/1FOTbIC1DAG9sv6hnppkA6xnCOiT9Q/11CQb4GYYAnpk/UM9NckGuDmGgPln/UM9NckGuFmGgHln
        /UM9NckGuHmGgPlm/UM9NckGuB2GgHlm/UM9NckGuD2GgPll/UM9NckGuF2GgHll/UM9NckGuH2GgPlk
        /UM9NckGuBuGgHlk/UM9NckGuDuGgN1n/UM9NckGuFuGgN1m/UM9NckGuHuGgN1l/UM9NckGOA+GgN1k
        /UM9NckGOB+GgO1n/UM9NckGOC+GgO1m/UM9NckGOD+GgO1l/UM9NckGOE+GgO1k/UM9NckGOF+GgM1n
        /UM9NckGOG+GgM1m/UM9NckGOH+GgM1l/UM9NckG2IMhYDNZ/1BPTbIB9mEIqM/6h3pqkg2wF0NAbdY/
        1FOTbID9GALqsv6hnppkA+zJEFCT9Q/11CQbYF+GgMNn/UM9NckG2Jsh4HBZ/1BPTbIB9mcIOHjWP9RT
        k2yAy2AIOFjWP9RTk2yAy2EI2H/WP9Q7cKfEHePx8dvxqjg/Phmj/yPgSs+L00J7ywAA9fbdzePJ8bYY
        /YXA3hgC9p4BAOrtuZvFuXFRjP4iYP8MAXvLAAD1Ttr0Uv/j4oIY/QXA4RgCTp4BAOqdsBvEC2P0B4E6
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>