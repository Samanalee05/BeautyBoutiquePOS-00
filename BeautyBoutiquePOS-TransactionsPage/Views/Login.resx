<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAd/0lEQVR4Xu3dCbBtaVnf4dvd0NCIICCDEBkEnBpIFJGSGQW0ga5oByKDhdGIBEqDUQsLYwQTUQuM
        ExoaSwygooEYMWqIEkEtxDBaQAMxjIJMzdQMDQ09JP/VDXT3vd+99wzv3nu9az2/qqeKOn3u5dZZ3/6+
        d+9zztpHJO2sa8XXx3fGj8Uz4o/i5fF38aH4SHwm/h8wO++LP44XxYvjZfHqeEX8STw3fjGeGOfEbeOU
        kLSiTo07xmPjt+K8uDhGmwqwXB+Pacj/+fjmuGZIWlg3jkfF78aHY7QZAOv2sXhBPCKmVwUlNe2G8eiY
        Xg68JEYPeICRD8bT4vYhqUHT9/TuE78TF8XogQ2wV5fF9DMEXxeSZtj0ct33xRtj9CAGOIxLY/oW4u1C
        0gy6Tjwh3h+jBy1Apc/G9EODZ4SkHTT9tO7jw8EP7ML068F3C0lbbPoe/5ti9KAE2Jbp2wLTqwGnh6QN
        drOYbuYx/VDO6MEIsAvTTYduGpKKOy1+IC6I0YMPYNfeEXcKSUV9Wbw0Rg84gDn5RDwgJB2y+8Z7Y/RA
        A5ij6f4jDwpJB2h6yf/J4e59QEefivuFpH10k/iLGD2oALq4MO4ekvbQrWP63drRgwmgm+ltxG8Tkk7Q
        mfHuGD2IALr625juWCpp0D3jozF68AB0N705maSjOjumH5gZPWgAluLhIelzTb/m5y17gTWYfh7A3QKl
        NN0xy8v+wJr8Xkir7vbxgRg9QACW7IEhrbKbx9tj9MAAWLrXx6khraprx2tj9KAAWIt/HtKqemaMHgwA
        azLd8OwaIa2ih8XogQCwRt8Z0uK7XXwsRg8CgDV6cUiL7lrxmhg9AADW6rK4bUiL7edjtPgB1u6nQ1pk
        081+Lo7RwgdYu78PaXGdEt7XH+DEvjakRfW9MVrsAFzph0JaTDeM82O02AG40otCWkz/KUYLHYCruzBO
        D6l9t47PxGihA3CsM0Nq37NjtMABGHtoSK37ivBrfwD785Mhte7pMVrcABzf74bUthvEJ2K0uAE4vr8O
        qW0/EqOFDcCJvSGktr0pRgsbgBN7Z0gtu3eMFjUAJ/eRkFr2rBgt6iX5UPxNTO/h/Xxm429jdL2gk0tC
        atd0B6tpeh0t6s7eH78a58SNQ/PpdvHj4fBnSaR2PShGi7mrv4qz4xqh+TTdY+KJ8doYXTfoTmrXr8do
        MXdzXtw3NJ/OiO+Kl8ZlMbpusBRSu94do8XcxfS9tyfFNUPzaLqnxHRNPhyjawZLJLXqjjFayF1MB4xn
        /fPpevGU+FiMrhcsmdSqx8doIXcwvXLxtaHdd2p8T7wvRtcK1kBq1fRrWKOFPHfnx1eGdt/t4+Uxuk6w
        JlKr/iFGC3nOPh13Ce22U+JfxSdjdJ1gbaQ23SJGi3juHhvabdeN/xqj6wNrJbXprBgt4jl7UWi33SZe
        H6PrA2smtekJMVrEczW99D/dQU676xvigzG6PrB2UpueE6NFPFe/Ftpd94gLYnRtAKlRfxmjRTxHF8et
        Q7tperdIP+wHJya16V0xWsRz9Ceh3XSHWOKbRUE1qUWnxXQL3dEinqOHh7bf9KrLe2J0TYCrk1p0kxgt
        4Dma3kTmS0Pb7drxmhhdE+BYUou+OkYLeI5eF9p+z4rR9QDGpBbdPUYLeI5+K7TdvjtG1wI4PqlF94/R
        Ap6jnwhtr+kOkR+N0bUAjk9q0YNjtIDn6DGh7fXCGF0H4MSkFp0TowU8R48MbaeHxugaACcntajTRj/9
        W7X5To+3xOgaACcntcgAoKP74Rh9/YG9kVpkANBVOyPOj9HXH9gbqUUGAF21x8Xoaw/sndQiA4A+33Rb
        aN/7h8OTWmQA0Oc7K0Zfd2B/pBYZAPT5nhejrzuwP1KLDACaul5cGKOvO7A/UosMAJp6RIy+5sD+SS0y
        AGhqeqOl0dcc2D+pRQYAnRofiNHXHNg/qUUGAP3jGH29gYORWmQA0PfF6OsNHIzUIgOAnhGjrzdwMFKL
        DAD6mxh9vYGDkVpkAJAfAIRaUosMAOtueve/y2L09QYORmqRAWDdfVWMvtbAwUktMgCsu7vF6GsNHJzU
        IgPAurtfjL7WwMFJLTIArLuzY/S1Bg5OatE5MVrAczT9W1XbQ2L0tQYOTmrRt8ZoAc/R/UO1dXoFCLqQ
        WnTXGC3gObpLqDYDANSTWnTDGC3gOZr+rarNAAD1pDZ1uBPc+0L1GQCgntSm34/RIp6T54fqMwBAPalN
        j4vRIp6Tx4TqMwBAPalNN4nPxmghz8HFcdNQfQYAqCe16r/HaCHPwQtDm8kAAPWkVt0rRgt5Du4R2kwG
        AKgnteslMVrMu/Snoc1lAIB6UrvOjDn9LMBn4mtCm8sAAPWklv1UjBb0LvxEaLMZAKCe1LLT4qUxWtTb
        9OI4NbTZDABQT2rbjeJNMVrY2/DGcNvf7WQAgHpS624Zb4nR4t6k/xtfHtpOBgCoJ7VvukHQq2K0wDfh
        FXHj0PYyAEA9aRFdK345Rou80nPjjNB2MwBAPWlR3Tc28XMB07cZvi20mwwAUE9aXNOrAY+Nd8Ro0e/H
        2+P74/TQ7jIAQD1psU2/KnhW/HacH6MHwMgHYnqp/1tj+ju0+wwAUE8r65ox3Unvfp9zdnxzfEVM/22p
        nRJ3jEfEk+PcmAaDyfS/p489PO4Q0+dqXhkAoJ4W3vQMdjronxlviBPdQveSOC9+Iabvd187pDlkAIB6
        WmjTr8Y9NT4Yowu/F9NL4dMtd73HvXadAQDqaWFdP6aD/5MxuuAHcVH8TPj1N+0qAwDU04K6Z7wzRhe6
        wlvjW0LadgYAqKeF9KSYvoc/usiVLo1/E9I2MwBAPTVv+on1X43Rxd2kXwu/IqdtZQCAemrcdPj/Rowu
        7DY8LwwB2kYGAKinxj0hRhd1m54f1whpkxkAoJ6adp+4OEYXddsMAdp0BgCop4Z9Ubw7Rhd0V3w7QJvM
        AAD11LDp5jyji7lrXgnQpjIAQD016x/FhTG6mHPglQBtIgMA1FOzpjvyjS7knHglQNUZAKCeGjUdqu+J
        0YWcG0OAKjMAQD016sExuohz5dsBqsoAAPXUqF+J0UWcM68EqCIDANRTo14To4s4d4YAHTYDANRTk64T
        c7nxz0H4doAOkwEA6qlJXxWjC9iJVwJ00AwAUE9N+qYYXcBuDAE6SAYAqKcmdfsNgBMxBGi/GQCgnpq0
        tA3QEKD9ZACAemrSEjdAQ4D2mgEA6qlJS90ADQHaSwYAqKcmLXkDNAToZBkAoJ6atPQN0BCgE2UAgHpq
        0ho2QEOAjpcBAOqpSWvZAA0BGmUAgHpq0po2QEOAjs4AAPXUpLVtgIYAXTUDANRTk9a4ARoC9PkMAFBP
        TVrrBmgI0JQBAOqpSWveAA0BMgBAPTVp7RugIWDdGQCgnppkAzQErDnrH+qpSTbAKxgC1pn1D/XUJBvg
        lQwB68v6h3pqkg3w6gwB68r6h3pqkg3wWIaA9WT9Qz01yQY4ZghYR9Y/1FOTbIDHZwhYftY/1FOTbIAn
        ZghYdtY/1FOTbIAnZwhYbtY/1FOTbIB7YwhYZtY/1FOTbIB7ZwhYXtY/1FOTbID7YwhYVtY/1FOTbID7
        ZwhYTtY/1FOTbIAHYwhYRtY/1FOTbIAHZwjon/UP9dQkG+DhGAJ6Z/1DPTXJBnh4hoC+Wf9QT02yAdYw
        BPTM+od6apINsI4hoF/WP9RTk2yAtQwBvbL+oZ6aZAOsZwjok/UP9dQkG+BmGAJ6ZP1DPTXJBrg5hoD5
        Z/1DPTXJBrhZhoB5Z/1DPTXJBrh5hoD5Zv1DPTXJBrgdhoB5Zv1DPTXJBrg9hoD5Zf1DPTXJBrhdhoB5
        Zf1DPTXJBrh9hoD5ZP1DPTXJBrgbhoB5ZP1DPTXJBrg7hoDdZ/1DPTXJBrhbhoDdZv1DPTXJBrh7hoDd
        Zf1DPTXJBjgPhoDdZP1DPTXJBjgfhoDtZ/1DPTXJBjgvhoDtZv1DPTXJBjg/hoDtZf1DPTXJBjhPhoDt
        ZP1DPTXJBjhfhoDNZ/1DPTXJBjhvhoDNZv1DPTXJBjh/hoDNZf1DPTXJBtiDIWAzWf9QT02yAfZhCKjP
        +od6apINsBdDQG3WP9RTk2yA/RgC6rL+oZ6aZAPsyRBQk/UP9dQkG2BfhoDDZ/1DPTXJBtibIeBwWf9Q
        T02yAfZnCDh41j/UU5NsgMtgCDhY1j/UU5NsgMthCNh/1j/UO3CnxB3j8fHb8ao4Pz4Zo/8j4ErPi9NC
        e8sAAPX23c3jyfG2GP2FwN4YAvaeAQDq7bmbxblxUYz+ImD/DAF7ywAA9U7a9FL/4+KCGP0FwOEYAk6e
        AQDqnbAbxAtj9AeBOoaAE2cAgHrH7cvidTH6Q0A9vx1w/AwAUG/YLeIdMfoDwOY8J6Zvu+nqGQCg3jFN
        L/ufF6NPBjbvqaGrZwCAeldreubx32L0icD2PCJ0ZQYAqHe1pp/2H30SsF3Tb93cKnRFBgCo94VuGh+N
        0ScB2/f7oSsyAEC9LzTd5Gf0CcDu3CdkAIBNuLzpLn+fjtEnALvzZyEDAGzC5U339h/9R2D3zoy1ZwCA
        epf/5P9br/IBYF6eEmvPAAD1jtzpqA8A8/LmWHsGAKh3+fv5j/4DMB/TrbnXnAEA6h357aM+AMzPP401
        ZwCAekdeddQHgPn50VhzBgCod+T9R30AmJ+nx5ozAEC9Ixce9QFgfp4da84AAPWOXHLUB4D5+b1YcwYA
        qHfkY0d9AJif34g1ZwCAekf+/qgPAPPztFhzBgCod+QlR30AmJ/HxJozAEC9I7961AeA+blXrDkDANQ7
        8vCjPgDMy0VxRqw5AwDUO3LTuPQqHwDm5c9j7RkAoN7lTRvM6D8Cu/foWHsGAKh3eY+K0X8EduuTccNY
        ewYAqHd514x3xugTgN35xZABADbhCz02Rp8A7Mb07P8WIQMAbMIXOi1eG6NPArbviaErMgBAvat155h+
        5Wj0icD2vDpOD12RAQDqHdMPxugTge24IG4XujIDANQb9ksx+mRgsz4T9w9dPQMA1Bt2ajw3Rn8A2IyL
        YzrodGwGAKh33E6J6R3IRn8IqDUd/t8ZGmcAgHon7TviozH6w8DhXRKPDB0/AwDU21PT7yL7lgDUc/jv
        LQMA1NtX944Xx+gvAvbHy/57zwAA9Q7U18TPxBtj9JcCJ+bw318GAKh36G4WZ8ePxtPjP8fzKffyGF1A
        +nH47z8DANRTk2yAy+B7/gfL+od6apINsD+H/8Gz/qGemmQD7M3hf7isf6inJtkA+3L4Hz7rH+qpSTbA
        nhz+NVn/UE9NsgH24/Cvy/qHemqSDbAXh39t1j/UU5NsgH04/Ouz/qGemmQD7MHhv5msf6inJtkA58/h
        v7msf6inJtkA583hv9msf6inJtkA58vhv/msf6inJtkA58nhv52sf6inJtkA58fhv72sf6inJtkA58Xh
        v92sf6inJtkA58Phv/2sf6inJtkA58Hhv5usf6inJtkAd8/hv7usf6inJtkAd8vhv9usf6inJtkAd8fh
        v/usf6inJtkAd8PhP4+sf6inJtkAt8/hP5+sf6inJtkAt8vhP6+sf6inJtkAt8fhP7+sf6inJtkAt8Ph
        P8+sf6inJtkAN8/hP9+sf6inJtkAN8vhP++sf6inJtkAN8fhP/+sf6inJtkAN8Ph3yPrH+qpSTbAeg7/
        Pln/UE9NsgHWcvj3yvqHemqSDbCOw79f1j/UU5NsgDUc/j2z/qGemmQDPDyHf9+sf6inJtkAD8fh3zvr
        H+qpSTbAg3P498/6h3pqkg3wYBz+y8j6h3pqkg1w/6bD/7tC/bP+oZ6aZAPcH4f/srL+oZ6aZAPcO4f/
        8rL+oZ6aZAPcG4f/MrP+oZ6aZAM8OYf/crP+oZ6aZAM8MYf/srP+oZ6aZAM8Pof/8rP+oZ6aZAMcc/iv
        I+sf6qlJNsBjOfzXk/UP9dQkG+DVOfzXlfUP9dQkG+CVHP7ry/qHemqSDfAKDv91Zv1DPTXJBujwX3PW
        P9RTk9a+ATr8150BAOqpSWveAB3+MgBAPTVprRugw19TBgCopyatcQN0+OvzGQCgnpq0tg3Q4a+rZgCA
        emrSmjZAh7+OzgAA9dSktWyADn+NMgBAPTVpDRugw1/HywAA9dSkpW+ADn+dKAMA1FOTlrwBOvx1sgwA
        UE9NWuoG6PDXXjIAQD01aYkboMNfe80AAPXUpKVtgA5/7ScDANRTkx4SowvY0cXxsJD2mgEA6qlJ94/R
        BezGM38dJAMA1FOTvj5GF7ATh78OmgEA6qlJt4rRBezCy/46TAYAqKcmnRoXxOgizp1n/jpsBgCop0b9
        zxhdxDlz+KsiAwDUU6N+MkYXca687K+qDABQT426Q4wu4hx55q/KDABQT8363zG6kHPi8Fd1BgCop2b9
        yxhdyLmYDn8v+6s6AwDUU7NOj7+L0cXcNc/8takMAFBPDfv2GF3MXXL4a5MZAKCemvaiGF3QXfCyvzad
        AQDqqWk3jHfE6KJuk2f+2kYGAKinxt01PhOjC7sNnvlrWxkAoJ6a9+D4dIwu7iZ9Nhz+2lYGAKinBXTv
        +HiMLvAmTP9fZ4W0rQwAUE8L6evizTG6yJXeFmeGtM0MAFBPC+o6cW5cFqOLfRjT9/t/Ia4b0rYzAEA9
        LbA7xx/H6ILv1zRM/GlMf6e0qwwAUE8L7hvjmXF+jC7+iXw4fj283K85ZACAelpBp8V948fjd+P18ZGr
        +EC8Ml4Q01sOT79eOP0ZaS4ZAKCetPjOiG+Jn44XxvTDktPgM/0q42T639PHpv/2H+Kb49qh+WQAgHrS
        Yrt7PDsO8iuSH4vfjG8K7T4DANSTFtc94y9jtOAP4qVxt9DuMgBAPWkx3SCmZ/yb+DXI6e98Vlw/tP0M
        AFBPWkTTbzxs482RphshfUNouxkAoJ7UvrPjUzFa4JtwUZwT2l4GAKgnte4hcXGMFvcmTf+f3xHaTgYA
        qCe1bbq3wfRsfLSwt2F6F8Z7hTafAQDqSS27WbwvRot6m6abKN08tNkMAFBPatcp8ZIYLehd+LPQZjMA
        QD2pXY+K0WLepYeFNpcBAOpJrZpu0fueGC3mXXpXnB7aTAYAqCe16rExWshz8OjQZjIAQD2pVW+I0UKe
        g/NCm8kAAPWkNk134Bst4jn5J6H6DABQT2rT9Fa9o0U8J08K1WcAgHpSm14Wo0U8J38Rqs8AAPWkFp0a
        27zf/0FdGNO/VbUZAKCe1KLbxGgBz9EtQ7UZAKCe1KLpnvujBTxH9wjVZgCAelKLHhSjBTxHZ4VqMwBA
        PalF09v+jhbwHE3/VtVmAIB6Uos6HQDTv1W1GQCgntQiA8C6MwBAPalFBoB1ZwCAelKLDADrzgAA9aQW
        GQDWnQEA6kktMgCsOwMA1JNaZABYdwYAqCe1yACw7gwAUE9qkQFg3RkAoJ7UIgPAujMAQD2pRQaAdWcA
        gHpSiwwA684AAPWkFhkA1p0BAOpJLTIArDsDANSTWmQAWHcGAKgntcgAsO4MAFBPapEBYN0ZAKCe1CID
        wLozAEA9qUUGgHVnAIB6UosMAOvOAAD1pBYZANadAQDqSS0yAKw7AwDUk1pkAFh3BgCoJ7XIALDuDABQ
        T2qRAWDdGQCgntQiA8C6MwBAPalFBoB1ZwCAelKLDADrzgAA9aQWGQDWnQEA6kktMgCsOwMA1JNaZABY
        dwYAqCe1yACw7gwAUE9qkQFg3RkAoJ7UIgPAujMAQD2pRQaAdWcAgHpSiwwA684AAPWkFhkA1p0BAOpJ
        LTIArDsDANSTWmQAWHcGAKgntcgAsO4MAFBPapEBYN0ZAKCe1CIDwLozAEA9qUXnxGgBz9EjQ7UZAKCe
        1KIHx2gBz9FjQrUZAKCe1KL7x2gBz9G/C9VmAIB6UovuHqMFPEe/FarNAAD1pBZ9dYwW8By9LlSbAQDq
        SS26cYwW8BxdFl8aqssAAPWkFp0Wl8RoEc+R3wSozQAA9aQ2/X2MFvEcvShUlwEA6klt+ssYLeI5ml6t
        uE2oJgMA1JPa9OwYLeK5ekaoJgMA1JPa9IQYLeK5uii+MnT4DABQT2rTt8VoEc/Zn4UOnwEA6kltunmM
        FvHc/UDocBkAoJ7UqnfHaCHP2fStgLuGDp4BAOpJrfovMVrIc/fBmO5mqINlAIB6Uqv+dYwWcgf/EGeG
        9p8BAOpJrbpDjBZyFx+J+4X2lwEA6knteleMFnMXl8a/j9NDe8sAAPWkdj0zRou5mzfHA0InzwAA9aR2
        PTBGi7mrv45vj2uGxhkAoJ7Urumg/HCMFnRn58e5MR12NwtdmQEA6kkt+40YLeglmX5g8JXx4nhBPH/F
        Xh6jrxFwcFLL7hWjBQ3A3khte2OMFjUAJye17YdjtKgBODmpbV8Sn4jRwgbgxKTW/VKMFjYAJya17tZx
        cYwWNwDHJ7XvWTFa3AAcn9S+W8VnYrTAARiTFtHTY7TAARiTFtH1470xWuQAHEtaTN8do0UOwLGkxXRK
        vDRGCx2Aq5MW1Znx2RgtdgCuJC2up8ZosQNwJWlxXSteE6MFD8AVpEV227ggRoseAGnBPTRGix4AaeE9
        I0YLH2DtpEV37fDzAADHkhbfjePvYvQAAFgraRXdLt4fowcBwNpcFtJqulN8NEYPBoA1+VRIq+o+8ekY
        PSAA1uJDIa2us2OafkcPCoA1eFdIq+we8ZEYPTAAlu61Ia22r41pCh49OACW7IUhrbpbxf+J0QMEYKl+
        OaTV96Xx5zF6kAAs0eNDUjolfiwuidGDBWBJ7hmSrtL0a4LvidEDBmAJLo0vDklHddN4cYweOADdvTEk
        HadT4wfjEzF6AAF09Ssh6STdMv4oRg8igI4eGJL22Fnx5hg9mAC6mG6Ffp2QtI+uGY8LPyQIdPWCkHTA
        zogfCoMA0M30XiiSDtnp8S/iDTF6oAHMyQdieiVTUmF3jmfGJ2P0wAPYtZ8KSRvqS+J74kXx2Rg9CAG2
        bfrhv5uEpC10o3h4PDeml95GD0qAbTg3JO2g6b0GprcffnQ8J14fXiEAtuFTMd3TRNJMmn4Y507xz+JH
        49fiD+NlMd1z4Pz4SEwv3Y0e1AB78bMhSS17aIw2NuDEpm8/Xj8kqWUGADiYh4Uktc0AAPs3vY+JJLXO
        AAD788G4eUhS6wwAsHeXxreGJLXPAAB7929DkhaRAQD25nlxakjSIjIAwMm9JK4VkrSYDABwYq+ILw5J
        WlQGADi+v4rrhSQtLgMAjP2PuE5I0iIzAMCxnhnTe4pI0mIzAMCVLorvDUlafAYAuMJ58XUhSavIAMDa
        XRzT2/qeHpK0mgwArNn0+/13DElaXQYA1uj1cU5I0mozALAmr4xvj1NCkladAYCl+3g8N+4XkqTPZQBg
        iT4dfxCPiOuGJOmoDAAsxXTo/1E8Kty+V5JO0vSDUKPNFDq46jN9b9gjSfvoATHaWGGuPNOXpIK+KUab
        LMzJdIteh74kFXaHGG24sGsOfUnaYLeM0eYLuzC9vP/CeGQ49CVpg50W0zOt0WYM2+CZviTtqDfFaGOG
        TXHoS9IMmn6NarRJQyWHviTNrJ+L0YYNh+V7+pI049wMiEqe6UtSk24Yl8ZoM4e9cOhLUtNeE6ONHY7H
        oS9JC+hpMdrk4aoc+pK0sO4Row0fHPqStOBOibfG6ABgfRz6krSinhyjw4B1cOhL0kq7bVwWo8OBZfJ7
        +pKky5ueAY4OCpbDM31J0jHdNUaHBr059CVJJ+1/xegQoReHviRpX907RgcK8+d7+pKkQ/X8GB0wzM9V
        n+lfPyRJOnBfFhfE6MBh9xz6kqSN9SMxOnzYDYe+JGkrXSNeHqPDiO3wPX1J0k768vhQjA4nNsMzfUnS
        LHpQuEPgZjn0JUmz7GdjdHBxcF7elyTNvundAn8zRgcZe+eZviSpXafFH8ToYOP4HPqSpPZdJ/4iRgcd
        V5pe3v/D+K7w8r4kaRFdK9wp8Fie6UuSFt/07YBzY3QQrolDX5K0uqYfDHxCXByjw3GpvLwvSVL6xnh7
        jA7LpfBMX5KkQTeK6Vnx6PDsyjN9SZL22NnxjhgdqB14pi9J0gH7ovi5mA7T0SE7N57pS5JU2E3iyfGx
        GB28u+SZviRJG+7G8ZR4b4wO422ZDn3P9CVJ2nLTvQPOit+JT8XokK7m5X1JkmbUdeOB8fPx2rg0Rgf4
        fk33JJj+vqfFA+KMkCRJM+0Gce94dExDwfT9+VfHW+J98YmYDviPx4fjbfHymG5J/B/j++Muce2QdtiR
        I/8fXX4yxOa505UAAAAASUVORK5CYII=
</value>
  </data>
</root>